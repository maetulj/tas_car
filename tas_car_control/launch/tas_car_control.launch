<?xml version="1.0"?>
<!-- tas_car_control.launch -->

<launch>
    <arg name="namespace" default="/"/>
    <arg name="world_name" default="$(find tas_car_gazebo)/worlds/tas_car.world"/>
    <arg name="cmd_timeout" default="0.5"/>

    <!-- Vehicle pose -->
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.1"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <include file="$(find tas_car_description)/launch/tas_car_description.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    <group ns="$(arg namespace)">

        <!-- Load the joint controllers. -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
              args="$(find tas_car_control)/config/tas_car_joint_controller.yaml"/>

        <!-- Convert joint states to TF transforms for rviz, etc -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" 
                respawn="false" output="screen">
            <param name="robot_description" command="$(find xacro)/xacro.py '$(find tas_car_description)/urdf/tas_car_description.urdf.xacro'" />
            <remap from="/joint_states" to="/tas_car/joint_states" />
        </node>

        <!-- Control the steering, axle, and shock absorber joints. -->
        <node name="ackermann_controller" pkg="tas_car_control"
              type="ackermann_controller">
            <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
            <rosparam file="$(find tas_car_control)/config/tas_car_ackermann_controller.yaml" command="load"/>
        </node>

        <!-- Transform the servo commands to ackermann_cmd for driving the Gazebo simulation. -->
        <node name="servo_to_ackermann_cmd" pkg="tas_car_control" type="tas_car_servo">
        </node>

        <!-- Transform the cmd_vel to ackermann_cmd for driving the Gazebo simulation. -->
        <node name="tas_car_cmd_ackermann" pkg="tas_car_control" type="tas_car_cmd_ackermann">
        </node>

        <!--(Static) transformation for relation between laser frame and base_link frame -->
        <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu" args="-0.28 0.0 0.15 0.0 0.0 0.0 /base_link /base_imu 40" />
        <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.28 0.0 0.18 0.0 0.0 0.0 /base_link /laser 40" />
        <node pkg="tf" type="static_transform_publisher" name="scanmatch_to_base" args="-0.28 0.0 -0.18 0.0 0.0 0.0 /scanmatcher_frame /base_link 40" />

        <!-- hector mapping -->
        <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
            <param name="scan_topic" value="/scan" />
            <param name="base_frame" value="base_link" />
            <param name="odom_frame" value="base_link"/>
            <param name="map_frame" value="odom"/>
            <param name="output_timing" value="false"/>
            <param name="use_tf_scan_transformation" value="true"/>
            <param name="use_tf_pose_start_estimate" value="false"/>
            <param name="map_pub_period" value="1.0"/>
            <param name="laser_max_dist" value = "10.0"/>
            <param name="laser_min_dist" value = "0.01"/>
            <param name="laser_z_min_value" value = "-0.3"/>
            <param name="update_factor_free" value="0.3"/>
            <param name="map_resolution" value="0.05"/>
            <param name="map_size" value="1024"/>
            <param name="map_start_x" value="0.5"/>
            <param name="map_start_y" value="0.5"/>
            <param name="map_multi_res_levels" value="1"/>
            <param name="use_tf_pose_start_estimate" value="false"/>
            <param name="pub_map_odom_transform" value="false"/>
            <param name="pub_map_scanmatch_transform" value="true"/>

            <remap from="map" to="hector_map" />
            <remap from="initialpose" to="hector_initial"/>
        </node>
    </group>
</launch>
